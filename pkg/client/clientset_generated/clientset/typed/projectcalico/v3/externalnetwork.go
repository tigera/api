// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package v3

import (
	context "context"

	projectcalicov3 "github.com/tigera/api/pkg/apis/projectcalico/v3"
	scheme "github.com/tigera/api/pkg/client/clientset_generated/clientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ExternalNetworksGetter has a method to return a ExternalNetworkInterface.
// A group's client should implement this interface.
type ExternalNetworksGetter interface {
	ExternalNetworks() ExternalNetworkInterface
}

// ExternalNetworkInterface has methods to work with ExternalNetwork resources.
type ExternalNetworkInterface interface {
	Create(ctx context.Context, externalNetwork *projectcalicov3.ExternalNetwork, opts v1.CreateOptions) (*projectcalicov3.ExternalNetwork, error)
	Update(ctx context.Context, externalNetwork *projectcalicov3.ExternalNetwork, opts v1.UpdateOptions) (*projectcalicov3.ExternalNetwork, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*projectcalicov3.ExternalNetwork, error)
	List(ctx context.Context, opts v1.ListOptions) (*projectcalicov3.ExternalNetworkList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *projectcalicov3.ExternalNetwork, err error)
	ExternalNetworkExpansion
}

// externalNetworks implements ExternalNetworkInterface
type externalNetworks struct {
	*gentype.ClientWithList[*projectcalicov3.ExternalNetwork, *projectcalicov3.ExternalNetworkList]
}

// newExternalNetworks returns a ExternalNetworks
func newExternalNetworks(c *ProjectcalicoV3Client) *externalNetworks {
	return &externalNetworks{
		gentype.NewClientWithList[*projectcalicov3.ExternalNetwork, *projectcalicov3.ExternalNetworkList](
			"externalnetworks",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *projectcalicov3.ExternalNetwork { return &projectcalicov3.ExternalNetwork{} },
			func() *projectcalicov3.ExternalNetworkList { return &projectcalicov3.ExternalNetworkList{} },
		),
	}
}
