// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/tigera/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/tigera/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeGlobalReportTypes implements GlobalReportTypeInterface
type fakeGlobalReportTypes struct {
	*gentype.FakeClientWithList[*v3.GlobalReportType, *v3.GlobalReportTypeList]
	Fake *FakeProjectcalicoV3
}

func newFakeGlobalReportTypes(fake *FakeProjectcalicoV3) projectcalicov3.GlobalReportTypeInterface {
	return &fakeGlobalReportTypes{
		gentype.NewFakeClientWithList[*v3.GlobalReportType, *v3.GlobalReportTypeList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("globalreporttypes"),
			v3.SchemeGroupVersion.WithKind("GlobalReportType"),
			func() *v3.GlobalReportType { return &v3.GlobalReportType{} },
			func() *v3.GlobalReportTypeList { return &v3.GlobalReportTypeList{} },
			func(dst, src *v3.GlobalReportTypeList) { dst.ListMeta = src.ListMeta },
			func(list *v3.GlobalReportTypeList) []*v3.GlobalReportType { return gentype.ToPointerSlice(list.Items) },
			func(list *v3.GlobalReportTypeList, items []*v3.GlobalReportType) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
