// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/tigera/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/tigera/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeGlobalAlertTemplates implements GlobalAlertTemplateInterface
type fakeGlobalAlertTemplates struct {
	*gentype.FakeClientWithList[*v3.GlobalAlertTemplate, *v3.GlobalAlertTemplateList]
	Fake *FakeProjectcalicoV3
}

func newFakeGlobalAlertTemplates(fake *FakeProjectcalicoV3) projectcalicov3.GlobalAlertTemplateInterface {
	return &fakeGlobalAlertTemplates{
		gentype.NewFakeClientWithList[*v3.GlobalAlertTemplate, *v3.GlobalAlertTemplateList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("globalalerttemplates"),
			v3.SchemeGroupVersion.WithKind("GlobalAlertTemplate"),
			func() *v3.GlobalAlertTemplate { return &v3.GlobalAlertTemplate{} },
			func() *v3.GlobalAlertTemplateList { return &v3.GlobalAlertTemplateList{} },
			func(dst, src *v3.GlobalAlertTemplateList) { dst.ListMeta = src.ListMeta },
			func(list *v3.GlobalAlertTemplateList) []*v3.GlobalAlertTemplate {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v3.GlobalAlertTemplateList, items []*v3.GlobalAlertTemplate) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
