// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/tigera/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/tigera/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeAlertExceptions implements AlertExceptionInterface
type fakeAlertExceptions struct {
	*gentype.FakeClientWithList[*v3.AlertException, *v3.AlertExceptionList]
	Fake *FakeProjectcalicoV3
}

func newFakeAlertExceptions(fake *FakeProjectcalicoV3) projectcalicov3.AlertExceptionInterface {
	return &fakeAlertExceptions{
		gentype.NewFakeClientWithList[*v3.AlertException, *v3.AlertExceptionList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("alertexceptions"),
			v3.SchemeGroupVersion.WithKind("AlertException"),
			func() *v3.AlertException { return &v3.AlertException{} },
			func() *v3.AlertExceptionList { return &v3.AlertExceptionList{} },
			func(dst, src *v3.AlertExceptionList) { dst.ListMeta = src.ListMeta },
			func(list *v3.AlertExceptionList) []*v3.AlertException { return gentype.ToPointerSlice(list.Items) },
			func(list *v3.AlertExceptionList, items []*v3.AlertException) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
